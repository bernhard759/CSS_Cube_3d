:root {
  --rotationXFrom: 0deg;
  --rotationYFrom: 0deg;
  --rotationXTo: 360deg;
  --rotationYTo: 360deg;
  --cubeDivColor: #E0E0E0;
  margin: 1rem;
}

div {
  box-sizing: content-box;
}

.flexbox {
  margin: 2em;
  display: flex;
  flex-wrap: wrap;
  height: 580px;
  align-items: center;
  justify-content: center;
  gap: 2em;
}

.cube-div {
  flex-grow: 1;
  position: relative;
  border-radius: 6px;
  box-shadow: 0 0 18px rgba(0, 0, 0, 0.12);
  background-color: var(--cubeDivColor);
  overflow: hidden;
  max-width: 550px;
  max-height: 550px;
  min-width: 250px;
  min-height: 250px;
  aspect-ratio: 1;
  touch-action: none;
}

.cube-container {
  height: 50%;
  width: 50%;
  top: 25%;
  left: 25%;
  perspective: 800px;
  perspective-origin: center;
  background-color: transparent;
  position: absolute;
}

/* Cube */
.cube {
  height: 100%;
  width: 100%;
  position: absolute;
  transform: translateZ(0);
  transform-style: preserve-3d;
  transition: transform 0.5s;
  will-change: transform;
}

/* Sides of the cube */
.side {
  border: 2px solid slategray;
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: visible;
  backface-visibility: visible;
  cursor: default;
}

.side-content {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
}

/* CSS Rotation and translateZ on the cube sides is done in JS */
/* CSS translateZ should be half the cube size */

/* Cube animation */
@keyframes rotate {
  0% {
    transform: rotateX(var(--rotationXFrom)) rotateY(var(--rotationYFrom));
  }

  100% {
    transform: rotateX(var(--rotationXTo)) rotateY(var(--rotationYTo));
  }
}
